<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>Maychou BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://maychou.github.io/"/>
  <updated>2020-05-30T05:13:12.796Z</updated>
  <id>https://maychou.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="https://maychou.github.io/2020/05/30/two/"/>
    <id>https://maychou.github.io/2020/05/30/two/</id>
    <published>2020-05-30T02:29:47.000Z</published>
    <updated>2020-05-30T05:13:12.796Z</updated>
    
    <content type="html"><![CDATA[<p>这个个人博客可以实现关键字搜索，标签分类等功能，还可以选择不同的主题和风格进行自定义。</p><h2 id="github创建个人仓库"><a href="#github创建个人仓库" class="headerlink" title="github创建个人仓库"></a><font color="#0099ff">github创建个人仓库</font></h2><p>首先登陆github账号，点击 GitHub 中的 New repository 创建新仓库，仓库名应该为：用户名 .github.io 。这里用户名使用你的 GitHub 帐号名称代替，这是固定写法。<br><em>注意：将仓库属性设置为public，公共仓库。</em><br>我的仓库名为👇：</p><img src="/2020/05/30/two/1.jpg" class title="examplename} ## &lt;font color&#x3D;#0099ff&gt;git管理&lt;&#x2F;font&gt; ## **配置信息** &lt;figure class&#x3D;highlight plain&gt;&lt;table&gt;&lt;tr&gt;&lt;td class&#x3D;gutter&gt;&lt;pre&gt;&lt;span class&#x3D;line&gt;1&lt;&#x2F;span&gt;&lt;br&gt;&lt;span class&#x3D;line&gt;2&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;code&gt;&lt;pre&gt;&lt;span class&#x3D;line&gt;git config --global user.name &quot;你的GitHub用户名&quot;&lt;&#x2F;span&gt;&lt;br&gt;&lt;span class&#x3D;line&gt;git config --global user.email &quot;你的GitHub注册邮箱&quot;&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;&lt;&#x2F;figure&gt; **生成密钥** &lt;figure class&#x3D;highlight plain&gt;&lt;table&gt;&lt;tr&gt;&lt;td class&#x3D;gutter&gt;&lt;pre&gt;&lt;span class&#x3D;line&gt;1&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;code&gt;&lt;pre&gt;&lt;span class&#x3D;line&gt;ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;&lt;&#x2F;figure&gt; 然后直接三个回车，默认不需要设置密码。最后得到了两个文件：&lt;font color&#x3D;red&gt;id_isa&lt;&#x2F;font&gt;和&lt;font color&#x3D;red&gt;id_isa.pub&lt;&#x2F;font&gt;。 **拷贝密钥** 打开&lt;font color&#x3D;red&gt;id_isa.pub文件&lt;&#x2F;font&gt;，注意&#x3D;&#x3D;不要直接双击打开，要右键选择打开方式为记事本&#x3D;&#x3D;，然后讲里面的内容全部复制。 {% asset_img 2.png 复制的内容"><p><strong>粘贴到github</strong></p><img src="/2020/05/30/two/3.png" class title="github ssh"><img src="/2020/05/30/two/4.png" class title="添加新的ssh"><p><strong>测试github ssh</strong><br>进行测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &#39;github.com (207.97.227.239)&#39; can&#39;t be established.</span><br><span class="line">2RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure><p>选择yes<br>如果看到hi 之后为你的用户名就成功了。</p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a><font color="#0099ff">安装node.js</font></h2><p>Hexo 基于 Node.js，因此需要先安装 Node.js，你可以在这里进行对应电脑版本的下载：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>这一步我之前就装好了，就略过了。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a><font color="#0099ff">安装hexo</font></h2><p>hexo是一个博客框架，使用Markdown语法解析文章<br>在git bash中使用npm 安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="使用hexo"><a href="#使用hexo" class="headerlink" title="使用hexo"></a><font color="#0099ff">使用hexo</font></h2><p>首先初始化博客:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myBlog</span><br></pre></td></tr></table></figure><p>==这一步要在你想建立myblog文件夹的地方使用右键git bash here==比如想将博客文件夹放在d盘就在d盘右键git bash<br>然后进入文件夹 <font color="red">myBlog</font>,输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>然后打开浏览器输入地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><img src="/2020/05/30/two/5.png" class title="hexo网站"><p>就可以看到最最基本的网页</p><ol><li>直接导入文章<br>平时写的文章可以直接添加到<font color="red">_posts</font>文件夹里，文件格式是<font color="red">md</font>格式。<br>可以自行上网百度markdown语法，网上也有很多在在线的markdown编辑器可以编辑md文件并导出。<ol start="2"><li>写文章<br>执行命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;&quot;&#x2F;&#x2F;引号内为md文件名称</span><br></pre></td></tr></table></figure></li></ol></li><li>生成网页</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><ol start="4"><li>部署到github上</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>==在deploy之前要在_config,yml中修改参数==<br>该文件直接用记事本打开即可</p><img src="/2020/05/30/two/6.png" class title="config"><p>之后，可以在浏览器中直接输入<font color="red">你的github名称.github.io</font>,这样博客就搭建好了。</p><h2 id="hexo主题"><a href="#hexo主题" class="headerlink" title="hexo主题"></a><font color="#0099ff">hexo主题</font></h2><p>我嫌弃默认的主题太傻乎乎，就开始重新配置主题。<br>可以在 <a href="https://hexo.io/themes/index.html进行主题的挑选" target="_blank" rel="noopener">https://hexo.io/themes/index.html进行主题的挑选</a><br>接着就可以按照每一个主题的安装要求，按照步骤安装。<br>按照我选择的主题为例<br><a href="https://github.com/Mrminfive/hexo-theme-skapp/blob/master/README-cn.md" target="_blank" rel="noopener">https://github.com/Mrminfive/hexo-theme-skapp/blob/master/README-cn.md</a><br>这是该主题的安装教程，按照步骤我唯一遇到的困扰我的问题，就是配置结束之后，虽然在localhost:4000调试时可以看到配置成功的界面。但部署到github上时就只有文本却无法显示样式。<br>最终解决方法是在<font color="red">_config.yml</font>中进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">responsibility: http:&#x2F;&#x2F;maychou.github.io&#x2F;</span><br></pre></td></tr></table></figure><p>其中 responsibility后面是你的github仓库名<br>最终效果：</p><img src="/2020/05/30/two/7.png" class title="myBlog"><h2 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a><font color="#0099ff">文章中插入图片</font></h2><p>如果不经过配置，默认配置下博客的md文件是没法插入图片的。<br><strong>修改<font color="red">_config.yml</font>文件</strong><br>修改<font color="red">_config.yml</font>配置文件<font color="red">post_asset_folder</font>项为<font color="red">true</font><br><strong>新建文章</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;yourname&quot;</span><br></pre></td></tr></table></figure><p>之后你会发现在<font color="red">_post</font>文件夹下除了yourname.md文件之外还有一个同名的文件夹，要插入的图片就放在这个文件夹里。<br><strong>插入图片</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 这是一个新的博客的图片.jpg 这是一个新的博客的图片的说明 %&#125;</span><br></pre></td></tr></table></figure><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a><font color="#0099ff">报错</font></h2><p><strong>安装新主题时下载文件速度过慢</strong><br>解决方法：安装cnpm<br>npm服务器不在国内有时下载软件速度相对较慢<br>命令行中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm -registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>检查安装是否成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><p>显示版本号则表示安装成功。</p><p>之后使用npm报错时可以用cnpm试一试。<br><strong>修改<font color="red">_config.yml文件</font></strong><br>修改这个文件时主要不要对同一个值配置两次，否则会报错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个个人博客可以实现关键字搜索，标签分类等功能，还可以选择不同的主题和风格进行自定义。&lt;/p&gt;
&lt;h2 id=&quot;github创建个人仓库&quot;&gt;&lt;a href=&quot;#github创建个人仓库&quot; class=&quot;headerlink&quot; title=&quot;github创建个人仓库&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="搭建博客" scheme="https://maychou.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>2020-05-30未命名文件</title>
    <link href="https://maychou.github.io/2020/05/30/2020-05-30%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6/"/>
    <id>https://maychou.github.io/2020/05/30/2020-05-30%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6/</id>
    <published>2020-05-30T02:14:34.986Z</published>
    <updated>2020-05-29T18:12:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎使用 <strong>{小书匠}(xiaoshujiang)编辑器</strong>，您可以通过 <code>小书匠主按钮&gt;模板</code> 里的模板管理来改变新建文章的内容。<br><img src="/2020/05/30/2020-05-30%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6/2.png" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;欢迎使用 &lt;strong&gt;{小书匠}(xiaoshujiang)编辑器&lt;/strong&gt;，您可以通过 &lt;code&gt;小书匠主按钮&amp;gt;模板&lt;/code&gt; 里的模板管理来改变新建文章的内容。&lt;br&gt;&lt;img src=&quot;/2020/05/30/2020-05-30%E6%9C%
      
    
    </summary>
    
    
    
      <category term="新建,模板,小书匠" scheme="https://maychou.github.io/tags/%E6%96%B0%E5%BB%BA-%E6%A8%A1%E6%9D%BF-%E5%B0%8F%E4%B9%A6%E5%8C%A0/"/>
    
  </entry>
  
  <entry>
    <title>智慧交通前端界面</title>
    <link href="https://maychou.github.io/2020/05/29/%E2%80%9DprojectRecord1/"/>
    <id>https://maychou.github.io/2020/05/29/%E2%80%9DprojectRecord1/</id>
    <published>2020-05-29T12:15:54.000Z</published>
    <updated>2020-05-29T15:01:06.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目需求和实现思路"><a href="#项目需求和实现思路" class="headerlink" title="项目需求和实现思路"></a>项目需求和实现思路</h2><ul><li>项目需求：展示后台获取到的违规图片到单网页界面</li><li>实现思路：</li></ul><ol><li>顶部导航部分实现搜索功能</li><li>将图片用列表方式排列在界面上</li><li>实现翻页操作</li><li>利用表单和ajax结合获取到后台传递的数据</li></ol><h2 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h2><h3 id="翻页功能"><a href="#翻页功能" class="headerlink" title="翻页功能"></a>翻页功能</h3><p>由于使用原生js实现，翻页没有组件直接实现会很麻烦。我就偷懒引用了jquery组件库中的分页组件。这个s组件是没有数据交互的。</p><p>要实现数据交互需要从后台拿到数据，根据是数据条数，改变翻页组件的总页数。</p><h3 id="数据交互"><a href="#数据交互" class="headerlink" title="数据交互"></a>数据交互</h3><p>==表单提交，ajax方式的区别==</p><h4 id="表单提交："><a href="#表单提交：" class="headerlink" title="表单提交："></a>表单提交：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;user&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line"></span><br><span class="line">username:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; &#x2F;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">password:&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot; &#x2F;&gt; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p>其中 action后面表示数据提交的目标网址，method后面为提交方式 get/post.</p><p>表单提交为单向提交，只能提交数据，不能能获得返回数据。<br>要解决表单提交返回数据的问题可以使用ajax。</p><p>实例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#提交按钮的id&quot;).click(function() &#123;</span><br><span class="line">        var formObject &#x3D; &#123;&#125;;</span><br><span class="line">        var formArray &#x3D;$(&quot;#form表单的id&quot;).serializeArray();</span><br><span class="line">        $.each(formArray,function(i,item)&#123;</span><br><span class="line">            formObject[item.name] &#x3D; item.value;</span><br><span class="line">        &#125;);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:&quot;user&#x2F;addUser&quot;,</span><br><span class="line">            type:&quot;post&quot;,</span><br><span class="line">            contentType: &quot;application&#x2F;json; charset&#x3D;utf-8&quot;,</span><br><span class="line">            data: JSON.stringify(formObject),</span><br><span class="line">            dataType: &quot;json&quot;,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                alert(data.msg);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:function(e)&#123;</span><br><span class="line">                alert(&quot;错误！！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;项目需求和实现思路&quot;&gt;&lt;a href=&quot;#项目需求和实现思路&quot; class=&quot;headerlink&quot; title=&quot;项目需求和实现思路&quot;&gt;&lt;/a&gt;项目需求和实现思路&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;项目需求：展示后台获取到的违规图片到单网页界面&lt;/li&gt;
&lt;li&gt;实现思
      
    
    </summary>
    
    
    
      <category term="js,前端" scheme="https://maychou.github.io/tags/js-%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://maychou.github.io/2020/05/26/hello-world/"/>
    <id>https://maychou.github.io/2020/05/26/hello-world/</id>
    <published>2020-05-26T12:23:04.625Z</published>
    <updated>2020-05-26T12:23:04.625Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
